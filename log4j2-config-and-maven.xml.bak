

<!--

        <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.9</version>
		</dependency>


        <dependency>  
            <groupId>org.slf4j</groupId>  
            <artifactId>jcl-over-slf4j</artifactId>  
            <version>1.7.9</version>  
            <scope>runtime</scope>  
        </dependency> 

-->

<!--核心log4j2jar包-->  
        <dependency>  
            <groupId>org.apache.logging.log4j</groupId>  
            <artifactId>log4j-api</artifactId>  
            <version>${log4j2.version}</version>  
        </dependency>  
        <dependency>  
            <groupId>org.apache.logging.log4j</groupId>  
            <artifactId>log4j-core</artifactId>  
            <version>${log4j2.version}</version>  
        </dependency>  
        <!--用于与slf4j保持桥接-->  
        <dependency>  
            <groupId>org.apache.logging.log4j</groupId>  
            <artifactId>log4j-slf4j-impl</artifactId>  
            <version>${log4j2.version}</version>  
        </dependency>  
        <!--web工程需要包含log4j-web，非web工程不需要-->  
        <dependency>  
            <groupId>org.apache.logging.log4j</groupId>  
            <artifactId>log4j-web</artifactId>  
            <version>${log4j2.version}</version>  
            <scope>runtime</scope>  
        </dependency>  
  
        <!--需要使用log4j2的AsyncLogger需要包含disruptor-->  
        <dependency>  
            <groupId>com.lmax</groupId>  
            <artifactId>disruptor</artifactId>  
            <version>3.2.0</version>  
        </dependency>
-->























<?xml version="1.0" encoding="UTF-8"?>
<configuration status="ERROR" monitorInterval="30">
	<Properties>
        <!-- 配置日志文件输出目录 -->
        <Property name="LOG_HOME">c:/d/sys_basic/logs</Property>
    </Properties>
    
	<!--先定义所有的appender-->
	<appenders>
		<console name="Console" target="SYSTEM_OUT">
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
		</console>
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
		<!--
		<File name="log" fileName="${LOG_HOME}/log/test.log" append="false">
			<PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
		</File>
		-->
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
		<RollingFile name="RollingFileDebug" fileName="${LOG_HOME}/logs/debug.log"
			filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/debug-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->        
			<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
			<Policies>
				<TimeBasedTriggeringPolicy/>
				<SizeBasedTriggeringPolicy size="100 KB"/>
			</Policies>
		</RollingFile>
		<RollingFile name="RollingFileWarn" fileName="${LOG_HOME}/logs/warn.log"
			filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
			<Policies>
				<TimeBasedTriggeringPolicy/>
				<SizeBasedTriggeringPolicy size="1 MB"/>
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="20"/>
		</RollingFile>
		<RollingFile name="RollingFileError" fileName="${LOG_HOME}/logs/error.log"
			filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
			<Policies>
				<TimeBasedTriggeringPolicy/>
				<SizeBasedTriggeringPolicy size="1 MB"/>
			</Policies>
		</RollingFile>
		
		<!--异步日志输出-->
		<Async name="Async">
			<AppenderRef ref="RollingFileDebug"/>
			<AppenderRef ref="RollingFileWarn"/>
		</Async>
    
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
		<logger name="org.springframework" level="error"></logger>
		<logger name="org.apache.ibatis" level="error"></logger>
		<logger name="com.xyscm.sys.basic.dao" level="debug"></logger>
		<logger name="com.xyscm.sys.basic.service" level="error"></logger>
		<logger name="com.xyscm.sys.basic.cas.dao" level="error"></logger>
		<logger name="com.xyscm.sys.basic" level="error"></logger>
		<root level="debug">
			<appender-ref ref="Console"/>
			<appender-ref ref="Async"/>
			<appender-ref ref="RollingFileError"/>
		</root>
	</loggers>
</configuration>