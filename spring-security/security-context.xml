<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 	http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security	http://www.springframework.org/schema/security/spring-security-3.1.xsd
		">


	<context:component-scan base-package="jp.co.intage" />

	<!-- <context:component-scan base-package="jp.co.intage.shiireweb" /> <debug 
		/> -->



	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/resources/**" security="none" />
	<http pattern="/login" security="none" />
	<http pattern="/login/**" security="none" />
	<http pattern="/session/timeout" security="none" />
	<http pattern="/session/logout" security="none" />
	<http pattern="/password/reset/**" security="none" /> 	<!-- パスワードリセット -->
	<http pattern="/error" security="none" />
	<http pattern="/auth_error" security="none" />







	<custom-filter position="FORM_LOGIN_FILTER"
		ref="shiireAuthenticationProcessingFilter" />

<!-- ①.先进入 ShiireAuthenticationProcessingFilter 这个自定义过滤器  
 调用attemptAuthentication 这个方法
 返回 Authentication 
  Authentication设置  UsernamePasswordAuthenticationToken 也可以继承扩自这个token
  
  ②.调用authenticationManager中的 shiireUserDetailsAuthenticationProvider
  的userDetailsService对象的loadUserByUsername方法 来验证用户名，密码 返回UserDetails （即userinfo）
  
  ③.然后回到shiireUserDetailsAuthenticationProvider，调用additionalAuthenticationChecks方法二次验证
  传出过了参数就是UserDetails,Authentication(2个参数就是前两个返回的结果，)
-->
<!-- 2.  -->
	<beans:bean id="shiireAuthenticationProcessingFilter"
		class="jp.co.intage.shiireweb.common.security.filter.ShiireAuthenticationProcessingFilter">

		<!-- 1 -->
		<beans:property name="authenticationManager" ref="authenticationManager" />

		<!-- 2 -->
		<beans:property name="authenticationFailureHandler"
			ref="failureHandler" />

		<!-- 3 -->
		<beans:property name="authenticationSuccessHandler"
			ref="successHandler" />
		<!-- 4 -->
		<beans:property name="sessionAuthenticationStrategy"
			ref="sessionFixationProtectionStrategy" />

	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="shiireUserDetailsAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="shiireUserDetailsAuthenticationProvider"
		class="jp.co.intage.shiireweb.common.security.authentication.ShiireAuthenticationProvider">
		<beans:property name="userDetailsService" ref="shiireUserDetailsService" />
	</beans:bean>

	<beans:bean id="shiireUserDetailsService"
		class="jp.co.intage.shiireweb.common.security.userdetails.ShiireUserDetailsService" />



	<beans:bean id="successHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/menu/menuList" />
	</beans:bean>


	<beans:bean id="failureHandler"
		class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop
					key="org.springframework.security.authentication.BadCredentialsException">/login/error</beans:prop>
				<beans:prop
					key="org.springframework.security.authentication.LockedException">/login/Locked</beans:prop>
				<beans:prop
					key="jp.co.intage.shiireweb.common.security.authentication.exception.FieldRequiredException">/login/AuthenticationFieldRequired</beans:prop>
				<beans:prop
					key="jp.co.intage.shiireweb.common.security.authentication.exception.UseridRequiredException">/login/UseridRequired</beans:prop>
				<beans:prop
					key="jp.co.intage.shiireweb.common.security.authentication.exception.PasswordRequiredException">/login/PasswordRequired</beans:prop>
				<beans:prop
					key="jp.co.intage.shiireweb.common.security.authentication.exception.LockAfterException">/login/LockAfter</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="sessionFixationProtectionStrategy"
		class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
		<beans:property name="migrateSessionAttributes" value="true" />
	</beans:bean>




	<!-- ---------------------------------------------------------------------------------------- -->



	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<!-- "Method 'setLoginFormUrl' is marked deprecated" is a known bug in 
			Spring Security with STS in Eclipse. You can ignore the warnings. http://stackoverflow.com/questions/11338985/how-to-properly-configure-http-tag-in-spring-security-3-1 
			https://jira.springsource.org/browse/SEC-1909 -->
		<beans:property name="loginFormUrl" value="/login" />
	</beans:bean>

	<http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint"
		use-expressions="true">



		<!-- <access-denied-handler error-page="/system/403" /> -->

		<intercept-url pattern="/master_maintenance/mail_add/complete*"
			access="permitAll" />
		<intercept-url pattern="/download/**" access="permitAll" />
		<intercept-url pattern="/api/**" access="permitAll" />
		<intercept-url pattern="/**" access="isAuthenticated()" />

		<logout invalidate-session="true" logout-url="/session/invalidate"
			logout-success-url="/session/logout" delete-cookies="JSESSIONID" />

		<session-management invalid-session-url="/session/timeout" />

		<!-- <remember-me /> -->

		<!-- Uncomment to limit the number of sessions a user can have -->
		<!-- <session-management invalid-session-url="/session/invalidate"> <concurrency-control 
			max-sessions="1" expired-url="/session/timeout" error-if-maximum-exceeded="true" 
			/> </session-management> -->

	</http>

</beans:beans>
